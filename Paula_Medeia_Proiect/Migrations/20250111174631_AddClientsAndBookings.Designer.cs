// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paula_Medeia_Proiect.Data;

#nullable disable

namespace Paula_Medeia_Proiect.Migrations
{
    [DbContext(typeof(Paula_Medeia_ProiectContext))]
    [Migration("20250111174631_AddClientsAndBookings")]
    partial class AddClientsAndBookings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.SalonBranch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SalonBranch");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<int?>("SalonBranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StylistID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalonBranchID");

                    b.HasIndex("StylistID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Stylist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StylistSpecializationID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StylistSpecializationID");

                    b.ToTable("Stylist");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.StylistSpecialization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StylistSpecialization");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Booking", b =>
                {
                    b.HasOne("Paula_Medeia_Proiect.Models.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientID");

                    b.HasOne("Paula_Medeia_Proiect.Models.Service", "Service")
                        .WithMany("Bookings")
                        .HasForeignKey("ServiceID");

                    b.Navigation("Client");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Service", b =>
                {
                    b.HasOne("Paula_Medeia_Proiect.Models.SalonBranch", "SalonBranch")
                        .WithMany("Services")
                        .HasForeignKey("SalonBranchID");

                    b.HasOne("Paula_Medeia_Proiect.Models.Stylist", "Stylist")
                        .WithMany("Services")
                        .HasForeignKey("StylistID");

                    b.Navigation("SalonBranch");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Stylist", b =>
                {
                    b.HasOne("Paula_Medeia_Proiect.Models.StylistSpecialization", "StylistSpecialization")
                        .WithMany("Stylists")
                        .HasForeignKey("StylistSpecializationID");

                    b.Navigation("StylistSpecialization");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.SalonBranch", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Service", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.Stylist", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Paula_Medeia_Proiect.Models.StylistSpecialization", b =>
                {
                    b.Navigation("Stylists");
                });
#pragma warning restore 612, 618
        }
    }
}
